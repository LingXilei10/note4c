```
class Solution {
public:
    int coinChange(vector<int>& coins, int amount) {
        vector<unsigned long long> dp(amount+1,INT_MAX);
        dp[0]=0;
        // for(int j=coins[0];j<=amount;j++){
        //     if(j%coins[0]==0) dp[j]=1;
        // }
        for(int i=0;i<coins.size();i++){
            for(int j=coins[i];j<=amount;j++){
                dp[j]=min(dp[j],dp[j-coins[i]]+1);
            }
        }
        if (dp[amount] == INT_MAX) return -1;
        return dp[amount];
    
    }
};
```


注意初始化：如果dp逻辑是求得满足总和为target的最小自己大小，需要min(dp[j],dp[j-coins[i])，初始化就一定要为INT_MAX
